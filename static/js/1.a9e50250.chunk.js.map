{"version":3,"sources":["components/SearchBar.jsx","components/products/UpdateProductForm.jsx","components/products/ProductRow.jsx","components/products/ProductCategoryRow.jsx","components/products/ProductTable.jsx","data.js","components/products/AddProductForm.jsx","helpers.js","components/products/FilterableProductTable.jsx"],"names":["SearchBar","_ref","onSearch","onCheck","onDeleted","filterText","inStockOnly","showDeleted","inputRef","react_default","a","createElement","react","Input","icon","placeholder","size","ref","value","onChange","className","style","paddingLeft","Checkbox","type","checked","id","label","withFormik","mapPropsToValues","props","Object","defineProperty","field","product","handleSubmit","_handleSubmit","asyncToGenerator","regenerator_default","mark","_callee2","values","_ref4","setSubmitting","_ref4$props","onSubmit","wrap","_context2","prev","next","resetForm","payload","parseFloat","stop","this","_x2","_x3","apply","arguments","displayName","trigger","position","dispatch","handleChange","dirty","touched","errors","handleBlur","isSubmitting","_useState","setFieldValue","setFieldTouched","isValid","useState","_useState2","slicedToArray","isOpen","setOpen","fieldRef","useRef","handleUpdate","_ref2","_callee","e","_context","_x","Trigger","cursor","border","backgroundColor","onClick","content","concat","useEffect","current","select","Form","Group","widths","inline","margin","width","onKeyUp","keyCode","onBlur","name","Button","loading","Icon","positive","negative","ProductRow","Table","Row","textAlign","Cell","disabled","deleted","products_UpdateProductForm","collapsing","basic","price","stocked","Popup","color","ProductCategoryRow","category","padding","ProductTable","categories","showCategoryHeader","products","getColor","categoryId","lastCategory","lastIndex","showHeader","TransitionGroup_default","component","map","item","i","find","ctg","CSSTransition_default","mountOnEnter","unmountOnExit","onEnter","console","log","onEntering","onEntered","onExit","onExiting","onExited","timeout","classNames","enterActive","exitActive","key","verticalAlign","colSpan","Label","ribbon","ProductCategoryRow_ProductCategoryRow","ProductRow_ProductRow","defaultProps","inventory","fromJS","items","uuid","validate","_ref3","objectWithoutProperties","categoriesOptions","reduce","acc","text","error","Field","Dropdown","clearable","selection","options","display","alignItems","fluid","keys","length","productsReducer","action","index","get","findIndex","setIn","set","push","objectSpread","FilterableProductTable","inputElement","filterQuery","setFilter","_useState3","_useState4","orderBy","setOrderBy","_useState5","_useState6","orderDirection","setOrderDirection","_useState7","_useState8","showInstockOnly","setInStock","_useState9","_useState10","setShowDeleted","_useState11","_useState12","openModal","setModalOpen","_useState13","_useState14","totalPrice","setTotalPrice","_useReducer","useReducer","_useReducer2","inventoryState","target","onSetOrderBy","currentColumn","clickedColumn","currentDirection","direction","filteredProducts","inStock","column","filter","match","RegExp","sortColumn","sortDirection","sortBy","f","sort","b","toLowerCase","localeCompare","reverse","getFilteredProducts","memoSearch","useMemo","SearchBar_SearchBar","memoProducts","products_ProductTable","toJS","includeDeleted","Container","paddingTop","Header","active","HeaderCell","Modal","centered","dimmer","closeIcon","right","top","closeOnDimmerClick","onClose","open","Content","products_AddProductForm","replace","l","toUpperCase","celled","padded","sortable","stackable","structured","striped","singleLine","sorted","Body","Footer","toFixed"],"mappings":"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","file":"static/js/1.a9e50250.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { Input, Checkbox } from \"semantic-ui-react\";\n\nexport const SearchBar = ({ onSearch, onCheck, onDeleted, filterText, inStockOnly, showDeleted, inputRef }) => {\n  return (<Fragment>\n    <Input icon='search' placeholder='Filter...' size='mini' ref={inputRef} value={filterText} onChange={onSearch} />\n    <span className=\"check-box\" style={{ paddingLeft: 10, }}>\n      <Checkbox type=\"checkbox\" checked={inStockOnly} onChange={onCheck} id=\"checkInStock\" label=\"Show only in stock\" />\n    </span>\n    <span className=\"check-box\" style={{ paddingLeft: 10, }}>\n      <Checkbox type=\"checkbox\" checked={showDeleted} onChange={onDeleted} id=\"checkDeleted\" label=\"Show Deleted\" />\n    </span>\n  </Fragment>);\n};\n","import React, { useState, useRef, useEffect } from 'react'\nimport { Form, Icon, Button } from 'semantic-ui-react';\nimport { withFormik } from 'formik';\n\nconst UpdateProductForm = ({\n  product,\n  field,\n  trigger,\n  position,\n  dispatch,\n  values,\n  dirty,\n  touched,\n  errors,\n  handleChange,\n  handleBlur,\n  handleSubmit,\n  isSubmitting,\n  setFieldValue,\n  setFieldTouched,\n  isValid,\n  onSubmit\n}) => {\n  const [isOpen, setOpen] = useState(false)\n  const fieldRef = useRef(null)\n  const handleUpdate = async (e) => {\n    await handleSubmit(e, setOpen)\n    setOpen(false)\n  }\n  const handleKeyUp = e => {\n    if (e.keyCode === 13)\n      handleUpdate(e)\n\n    if (e.keyCode === 27)\n      setOpen(false)\n  }\n\n  const Trigger = <div style={{ cursor: 'pointer', border: 'none', backgroundColor: 'transparent' }} onClick={() => setOpen(!isOpen)} content={`${product[field]}`}>{trigger}</div>\n\n  useEffect(() => {\n    if (fieldRef.current) fieldRef.current.select()\n  }, [])\n\n  if (!isOpen && !isSubmitting) {\n    return Trigger\n  }\n\n  return (\n    <Form onSubmit={handleUpdate}>\n      <Form.Group widths='equal' inline style={{ margin: 0 }}>\n        <Form.Input\n          size='small'\n          width={3}\n          value={values[field]}\n          onKeyUp={handleKeyUp}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          name={field}\n          placeholder={product[field]}\n        />\n        <Button.Group>\n          <Button loading={isSubmitting} type=\"normal\" onClick={handleUpdate} size='mini' icon={<Icon name='check' />} positive />\n          <Button type=\"normal\" onClick={() => setOpen(false)} size='mini' icon={<Icon name='close' />} negative />\n        </Button.Group>\n      </Form.Group>\n    </Form>\n  )\n}\n\nexport default withFormik({\n  mapPropsToValues: (props) => ({ [props.field]: props.product[props.field] }),\n  handleSubmit: async (values, { setSubmitting, resetForm, props: { product, field, onSubmit }, }) => {\n\n    await onSubmit({\n      type: 'update_product',\n      payload: {\n        field,\n        value: field === 'price' ? parseFloat(values[field]) : values[field],\n        id: product.id\n      }\n    })\n    setSubmitting(false)\n\n  },\n  displayName: 'UpdateProduct'\n})(UpdateProductForm)","import React, { Fragment } from 'react';\nimport { Table, Button, Icon, Popup } from \"semantic-ui-react\";\nimport UpdateProductForm from './UpdateProductForm';\n\nexport const ProductRow = ({ product, dispatch }) => {\n  return (\n    <Table.Row textAlign='center' >\n      <Table.Cell textAlign='left' disabled={product.deleted} width={9}>\n        <UpdateProductForm field='name' product={product} onSubmit={dispatch} position={'top left'} trigger={<Fragment>{product.name}</Fragment>} />\n      </Table.Cell>\n      <Table.Cell collapsing disabled={product.deleted} width={4}>\n        <UpdateProductForm field='price' product={product} onSubmit={dispatch} position={'top center'} trigger={<Button basic content={`$ ${product.price}`} />} />\n      </Table.Cell>\n      <Table.Cell disabled={product.deleted} collapsing positive={product.stocked} negative={!product.stocked} onClick={() => dispatch({ type: 'update_stock', payload: { id: product.id, stocked: !product.stocked } })}>\n        {product.stocked ? <Icon name='checkmark' /> : <Icon name='close' />}\n        {product.stocked ? 'In Stock' : 'Out of Stock'}\n      </Table.Cell>\n      <Table.Cell collapsing>\n        {!product.deleted && <Popup\n          trigger={<Button size='mini' color=\"red\" icon onClick={() => dispatch({ type: 'remove_product', payload: { id: product.id } })}>\n            <Icon name='trash' />\n          </Button>}\n          position='top center'\n          content={`Delete Product`}\n        />}\n        {product.deleted && <Popup\n          trigger={<Button size='mini' color=\"orange\" icon onClick={() => dispatch({ type: 'undelete_product', payload: { id: product.id } })}>\n            <Icon name='undo' />\n          </Button>}\n          position='top center'\n          content={`Restore Product`}\n        />}\n      </Table.Cell>\n    </Table.Row>\n  );\n}","import React from 'react';\nexport const ProductCategoryRow = ({ category }) => (<strong style={{ padding: 10 }}>\n  {category}\n</strong>);\n","import React, { Fragment } from 'react'\nimport TransitionGroup from 'react-transition-group/TransitionGroup';\nimport CSSTransition from 'react-transition-group/CSSTransition'\nimport { Table, Label } from \"semantic-ui-react\";\nimport { ProductRow } from './ProductRow';\nimport { ProductCategoryRow } from './ProductCategoryRow';\nimport './productTable.css'\n\nconst ProductTable = ({ categories, showCategoryHeader, products, dispatch }) => {\n  const getColor = categoryId => {\n    switch (categoryId) {\n      case 1:\n        return 'purple'\n      case 2:\n        return 'red'\n      case 3:\n        return 'blue'\n      default:\n        return 'violet'\n    }\n  }\n\n  let lastCategory = null\n  let lastIndex = 0\n  let showHeader = null\n\n  return (\n    <Fragment>\n      <TransitionGroup component={null}>\n        {products.map((item, i) => {\n          const category = categories.find(ctg => ctg.id === item.categoryId)\n          if (item.categoryId !== lastCategory && lastIndex <= i) {\n            lastCategory = item.categoryId\n            lastIndex = i\n            showHeader = true\n          } else {\n            showHeader = false\n          }\n          return (\n            <CSSTransition\n              mountOnEnter\n              unmountOnExit\n              onEnter={() => console.log('ENTER')}\n              onEntering={() => console.log('ENTERING')}\n              onEntered={() => console.log('ENTERED')}\n              onExit={() => console.log('EXIT')}\n              onExiting={() => console.log('EXITING')}\n              onExited={() => console.log('EXITED')}\n              timeout={300} classNames={{\n                enterActive: 'fadeIn',\n                exitActive: 'fadeOut'\n              }}\n              key={item.id}>\n              <Fragment key={item.id}>\n                {showHeader && showCategoryHeader ? <Table.Row key={item.categoryId} >\n                  <Table.Cell verticalAlign='middle' colSpan={4} width={16}>\n                    <Label color={getColor(item.categoryId)} ribbon><ProductCategoryRow category={category.name} /></Label>\n                  </Table.Cell>\n                </Table.Row> : null}\n                <ProductRow product={item} dispatch={dispatch} />\n              </Fragment>\n            </CSSTransition>\n          )\n        })}\n      </TransitionGroup>\n    </Fragment>\n  );\n}\n\nProductTable.defaultProps = {\n  showCategoryHeader: true\n}\n\nexport default ProductTable","import uuid from 'uuid'\nimport { fromJS } from 'immutable'\n\n// Create Immutable Map\nexport const inventory = fromJS({\n  categories: [\n    { id: 1, name: \"Sporting Goods\" },\n    { id: 2, name: \"Electronics\" },\n    { id: 3, name: \"Clothes\" },\n    { id: 4, name: \"Accessories\" }\n  ],\n  items: [\n    { id: uuid(), categoryId: 1, price: 49.99, stocked: true, name: \"Football\" },\n    { id: uuid(), categoryId: 2, price: 199.99, stocked: true, name: \"iPad Pro\" },\n    { id: uuid(), categoryId: 1, price: 49.99, stocked: true, name: \"Football 2\" },\n    { id: uuid(), categoryId: 4, price: 199.99, stocked: true, name: \"Bag\" },\n    { id: uuid(), categoryId: 1, price: 49.99, stocked: false, name: \"Football 3\" },\n    { id: uuid(), categoryId: 2, price: 199.99, stocked: true, name: \"iPhone 7\" },\n    { id: uuid(), categoryId: 4, price: 199.99, stocked: false, name: \"Belt\" },\n    { id: uuid(), categoryId: 2, price: 199.99, stocked: false, name: \"iPod\" },\n    { id: uuid(), categoryId: 3, price: 199.99, stocked: true, name: \"Thong\" },\n    { id: uuid(), categoryId: 3, price: 199.99, stocked: true, name: \"Thong\" },\n    { id: uuid(), categoryId: 3, price: 199.99, stocked: false, name: \"Thong\" },\n    { id: uuid(), categoryId: 4, price: 199.99, stocked: true, name: \"Shoe\" },\n  ]\n});","import React from 'react'\nimport { withFormik } from \"formik\";\nimport { Form, Dropdown } from \"semantic-ui-react\";\n\nconst AddProductForm = ({\n  values,\n  touched,\n  errors,\n  handleChange,\n  handleBlur,\n  handleSubmit,\n  isSubmitting,\n  setFieldValue,\n  setFieldTouched,\n  isValid,\n  onSubmit,\n  categories,\n  ...rest\n}) => {\n  const { name, price, stocked, category } = values\n\n  const categoriesOptions = categories.reduce((acc, category) => {\n    return acc.concat({\n      text: category.name,\n      value: category.id\n    })\n  }, [])\n\n  const changeCategory = (e, { name, value }) => {\n    setFieldValue(name, value)\n    setFieldTouched(name)\n  }\n\n  return (\n    <Form onSubmit={handleSubmit} style={{ padding: 10, }}>\n      <Form.Group widths=\"equal\">\n        <Form.Input\n          error={errors.name && touched.name}\n          disabled={isSubmitting} placeholder='Name' name='name' value={name} onChange={handleChange} onBlur={handleBlur} />\n        <Form.Input\n          error={errors.price && touched.price}\n          disabled={isSubmitting}\n          onBlur={handleBlur}\n          placeholder='Price'\n          type=\"number\"\n          name='price'\n          value={price}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Field width={8}>\n          <Dropdown clearable name='category' value={category} onChange={changeCategory} placeholder='Select Category' selection options={categoriesOptions} />\n        </Form.Field>\n        <Form.Field width={4} style={{ display: 'flex', alignItems: 'center', }}>\n          <Form.Checkbox label=\"In Stock\" name=\"stocked\" checked={stocked} id=\"stocked\" onChange={handleChange} />\n        </Form.Field>\n        <Form.Field width={4}>\n          <Form.Button icon='cart' fluid color=\"violet\" type=\"submit\" size=\"small\" disabled={Object.keys(errors).length !== 0 || !isValid} loading={isSubmitting} content='Add Product' />\n        </Form.Field>\n      </Form.Group>\n    </Form>\n  )\n}\n\nexport default withFormik({\n  mapPropsToValues: (props) => ({ name: '', price: '', stocked: false, category: '' }),\n  validate: (values) => {\n    const errors = {}\n    if (!values.name) {\n      errors.name = 'Error'\n    }\n\n    if (!values.price) {\n      errors.price = 'Error'\n    }\n\n    if (!values.category) {\n      errors.category = 'Error'\n    }\n    return errors\n  },\n  handleSubmit: (values, { setSubmitting, resetForm, props: { onSubmit } }) => {\n    setSubmitting(true)\n    onSubmit(values)\n    setSubmitting(false)\n    resetForm()\n  },\n  displayName: 'AddProduct'\n})(AddProductForm)\n","import { fromJS } from \"immutable\";\nimport uuid from \"uuid\";\n\nexport const productsReducer = (inventory, action) => {\n  let index\n  switch (action.type) {\n    case 'undelete_product':\n      index = inventory.get('items').findIndex(product => product.get('id') === action.payload.id)\n      return inventory.setIn(['items', index, 'deleted'], false)\n    case 'update_product':\n      index = inventory.get('items').findIndex(product => product.get('id') === action.payload.id)\n      const field = action.payload.field\n      const value = action.payload.value\n      return inventory = inventory.setIn(['items', index, field], value)\n    case 'update_stock':\n      index = inventory.get('items').findIndex(product => product.get('id') === action.payload.id)\n      // inventory.setIn(['items', index, 'stocked'], true)\n      return inventory = inventory.setIn(['items', index, 'stocked'], action.payload.stocked)\n    case 'add_product':\n      return inventory.set('items', inventory.get('items').push(fromJS({ ...action.payload.product, id: uuid() })))\n    case 'remove_product':\n      index = inventory.get('items').findIndex(product => product.get('id') === action.payload.id)\n      return inventory.setIn(['items', index, 'deleted'], true)\n    default:\n      return inventory\n  }\n}\n\nexport const getFilteredProducts = (products, filterQuery, inStock, showDeleted, column, direction) => {\n\n  let items = products.filter(item => {\n    if (filterQuery !== '') return item.get('name').match(new RegExp(filterQuery, 'ig'))\n    return item\n\n  }).filter(item => {\n    if (inStock) return item.get('stocked') === true\n    return item\n  }).filter(item => {\n    if (showDeleted) return item\n    return !item.get('deleted')\n  })\n\n  if (column || direction) {\n    const sortColumn = column || null\n    const sortDirection = direction || 'ascending'\n    items = sortColumn ? items.sortBy((f) => f.get(sortColumn)) : items.sortBy((f) => f.get('categoryId'))\n    if (sortColumn === 'name') {\n      items = items.sort((a, b) => a.get('name').toLowerCase().localeCompare(b.get('name').toLowerCase()))\n    }\n\n    return sortDirection === 'descending' ? items : items.reverse()\n  }\n\n  return items\n}\n\n// Calculate total from products\nexport const getTotalPrice = (inventory, includeDeleted) => {\n  let totalPrice = 0\n  totalPrice = inventory.reduce((acc, product) => {\n    // Don't include products that are deleted (soft)\n    if (product.get('deleted') && !includeDeleted) return acc\n    return acc += product.get('price')\n  }, 0)\n\n  return totalPrice\n}\n","import React, { useState, useEffect, useReducer, useRef, useMemo } from 'react';\nimport { Table, Container, Modal, Button, Icon } from \"semantic-ui-react\";\nimport { SearchBar } from '../SearchBar';\nimport ProductTable from './ProductTable';\nimport { inventory } from '../../data'\nimport AddProductForm from './AddProductForm';\nimport { getFilteredProducts, getTotalPrice, productsReducer } from '../../helpers';\n\nconst FilterableProductTable = () => {\n  // State, Reducer and Ref hooks\n  const inputElement = useRef(null);\n  const [filterQuery, setFilter] = useState('')\n  const [orderBy, setOrderBy] = useState(null)\n  const [orderDirection, setOrderDirection] = useState('ascending')\n  const [showInstockOnly, setInStock] = useState(false)\n  const [showDeleted, setShowDeleted] = useState(false)\n  const [openModal, setModalOpen] = useState(false)\n  const [totalPrice, setTotalPrice] = useState(0)\n  const [inventoryState, dispatch] = useReducer(productsReducer, inventory)\n\n  // state methods\n  const onSearch = e => setFilter(e.target.value);\n  const onCheck = () => setInStock(!showInstockOnly);\n  const onDeleted = () => setShowDeleted(!showDeleted);\n  const onSetOrderBy = (currentColumn, clickedColumn, currentDirection) => {\n    const direction = currentDirection === 'ascending' ? 'descending' : 'ascending'\n    if (currentColumn !== clickedColumn) {\n      setOrderBy(clickedColumn)\n    }\n    setOrderDirection(direction)\n  }\n  const onAddProduct = product => {\n    dispatch({\n      type: 'add_product', payload: {\n        category: { id: product.category },\n        product: { ...product, name: product.name.replace(/\\b\\w/g, l => l.toUpperCase()), categoryId: product.category }\n      }\n    })\n    setModalOpen(false)\n  }\n\n  // local Collections\n  const filteredProducts = getFilteredProducts(inventoryState.get('items'), filterQuery, showInstockOnly, showDeleted, orderBy, orderDirection)\n  const categories = inventoryState.get('categories')\n\n  // Memoized components\n  const memoSearch = useMemo(() =>\n    <SearchBar onSearch={onSearch} onDeleted={onDeleted} showDeleted={showDeleted} onCheck={onCheck} filterText={filterQuery} inStockOnly={showInstockOnly} inputRef={inputElement} />,\n    [onSearch, onCheck, onDeleted, filterQuery, showInstockOnly, showDeleted, inputElement]\n  )\n  const memoProducts = useMemo(() =>\n    <ProductTable products={filteredProducts.toJS()} categories={categories.toJS()} dispatch={dispatch} />, [\n      filteredProducts, categories, dispatch\n    ])\n\n  // Lifecycle Hook\n  useEffect(() => {\n    if (inputElement.current) {\n      // inputElement.current.focus();\n    }\n  }, [])\n\n  useEffect(() => {\n    const price = getTotalPrice(filteredProducts, showDeleted)\n    setTotalPrice(price)\n  }, [totalPrice, filteredProducts.toJS().length])\n\n  return (\n    <Container style={{ paddingTop: 20, }}>\n      <Table>\n        <Table.Header>\n          <Table.Row active={false}>\n            <Table.HeaderCell textAlign='left' colSpan={3}>\n              {memoSearch}\n\n            </Table.HeaderCell>\n            <Table.HeaderCell textAlign='right'>\n              <Modal\n                centered={false}\n                dimmer\n                size='small'\n                closeIcon={<div style={{ position: 'absolute', right: 0, top: 8, textAlign: 'right', padding: 15, cursor: 'pointer' }}><Icon name='close' /></div>}\n                closeOnDimmerClick\n                onClose={() => setModalOpen(false)}\n                open={openModal}\n                trigger={<Button onClick={() => setModalOpen(true)} color='purple'>Add A Product</Button>}\n              >\n                <Modal.Header>Add Product</Modal.Header>\n                <Modal.Content >\n                  <AddProductForm onSubmit={onAddProduct} categories={categories.toJS()} />\n\n                </Modal.Content>\n              </Modal>\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n      </Table>\n      <Table celled padded sortable stackable structured striped size='small' singleLine>\n        <Table.Header>\n          <Table.Row textAlign='center'>\n            <Table.HeaderCell textAlign='left' sorted={orderBy === 'name' ? orderDirection : null} onClick={() => onSetOrderBy(orderBy, 'name', orderDirection)}>Product</Table.HeaderCell>\n            <Table.HeaderCell sorted={orderBy === 'price' ? orderDirection : null} onClick={() => onSetOrderBy(orderBy, 'price', orderDirection)}>Price</Table.HeaderCell>\n            <Table.HeaderCell sorted={orderBy === 'stocked' ? orderDirection : null} onClick={() => onSetOrderBy(orderBy, 'stocked', orderDirection)}>In Stock</Table.HeaderCell>\n            <Table.HeaderCell>Action</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {memoProducts}\n        </Table.Body>\n        <Table.Footer>\n          <Table.Row textAlign='center'>\n            <Table.HeaderCell />\n            <Table.HeaderCell>\n              <strong>$$$$ {totalPrice.toFixed(2)}</strong>\n            </Table.HeaderCell>\n            <Table.HeaderCell colSpan={2} >\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n    </Container>\n  );\n}\n\nexport default FilterableProductTable"],"sourceRoot":""}