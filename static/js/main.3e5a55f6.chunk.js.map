{"version":3,"sources":["components/AuthWrapper.jsx","components/ErrorBoundary.jsx","components/TestComponent.jsx","components/contextWrapper.jsx","App.js","serviceWorker.js","index.js"],"names":["AuthWrapper","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","isAuthenticated","toggleAuth","setState","inherits","createClass","key","value","props","children","react_default","a","createElement","onClick","Component","ErrorBoundary","hasError","error","errorInfo","info","_this$state","react","className","message","Container","styled","div","_templateObject","Section","_ref","header","subheader","bgColor","primary","style","backgroundColor","theme","defaultProps","WrappedComponent","Context","FilterableProductTable","React","lazy","Promise","all","__webpack_require__","e","then","bind","initialContext","foo","createContext","FilteredProductsWithContextProvider","ContextProvider","changeContext","obj","objectSpread","Provider","contextProviderWrapper","_Component2","ContextConsumer","_this2","Consumer","context","assign","App","fallback","Loader","size","active","AuthWrapper_AuthWrapper","styled_components_browser_esm","mode","ErrorBoundary_ErrorBoundary","TestComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e5a55f6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport class AuthWrapper extends Component {\n  state = {\n    isAuthenticated: true\n  };\n  toggleAuth = () => {\n    this.setState(state => ({\n      isAuthenticated: !state.isAuthenticated\n    }));\n  };\n  render() {\n    const { isAuthenticated } = this.state;\n    if (!isAuthenticated)\n      return (<div>Please log in {isAuthenticated ? <button onClick={this.toggleAuth}>Log out</button> : <button onClick={this.toggleAuth}>Log in</button>}</div>);\n    return this.props.children;\n  }\n}\n","import React, { Component, Fragment } from 'react';\nexport class ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null, errorInfo: '' };\n  }\n  static getDerivedStateFromError(error) {\n    // console.log(\"get derived state from error: \", error);\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true, error };\n  }\n  componentDidCatch(error, info) {\n    // console.log('Component did catch: ', error, info);\n    // You can also log the error to an error reporting service\n    //logErrorToMyService(error, info);\n    this.setState({\n      hasError: true,\n      error,\n      errorInfo: info\n    });\n  }\n  render() {\n    const { hasError, error } = this.state;\n    const { children } = this.props;\n    // console.log(hasError, error, errorInfo, children);\n    return (<Fragment>\n      {hasError && <div className=\"errors-wrapper\">\n        {error && error.message}\n        {error && <div className=\"error\">Crashed</div>}\n      </div>}\n      {children}\n    </Fragment>);\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components';\nimport theme from \"styled-theming\";\n\nconst Container = styled.div`\n  padding: 1.5em\n  h1, h2, h6 {\n    text-align: center\n  }\n  p, dl, dd, dt {\n    color: #fff\n  }\n`\nexport const Section = ({ header, subheader, children, bgColor, primary }) => {\n  return (\n    <Container style={{ backgroundColor: primary ? '#ececec' : bgColor }}>\n\n      {typeof header === 'function' ? header(theme) : <h1>{header}</h1>}\n      <h6>{subheader || null}</h6>\n\n      {typeof children === 'function' ? children(theme) : children}\n\n    </Container>\n  )\n}\n\nSection.defaultProps = {\n  bgColor: '#f9f9f9',\n  primary: false\n}\n\nexport default Section","import React, { Component } from 'react';\n\nexport const contextProviderWrapper = (WrappedComponent, Context, initialContext) => {\n  // console.log(Context, initialContext);\n\n  return class ContextProvider extends Component {\n    constructor(props) {\n      super(props);\n      this.state = { ...initialContext };\n    }\n    // define any state changers\n    changeContext = (obj) => {\n      this.setState({ ...obj });\n    };\n    render() {\n      return (\n        <Context.Provider value={{\n          ...this.state,\n          changeContext: this.changeContext\n        }}>\n          <WrappedComponent {...this.props} />\n        </Context.Provider>\n      );\n    }\n  };\n};\n\nexport const contextConsumerWrapper = (WrappedComponent, Context) => {\n  // console.log(Context);\n\n  return class ContextConsumer extends Component {\n    render() {\n      return (\n        <Context.Consumer>\n          {context => <WrappedComponent context={context} {...this.props} />}\n        </Context.Consumer>\n      );\n    }\n  };\n};\n","import React, { createContext, Suspense } from 'react';\nimport { ThemeProvider } from \"styled-components\";\nimport { AuthWrapper } from './components/AuthWrapper';\nimport { ErrorBoundary } from './components/ErrorBoundary';\nimport { contextConsumerWrapper, contextProviderWrapper } from \"./components/contextWrapper\";\nimport { Loader } from \"semantic-ui-react\";\nimport Section from './components/TestComponent';\n\nconst FilterableProductTable = React.lazy(() => import('./components/products/FilterableProductTable'));\nconst initialContext = { foo: 'bar', theme: 'light' }\nconst Context = createContext(initialContext)\n\nconst FilteredProductsWithContext = contextConsumerWrapper(FilterableProductTable, Context);\nconst FilteredProductsWithContextProvider = contextProviderWrapper(FilteredProductsWithContext, Context, initialContext);\n\nconst App = () => (\n  <Suspense fallback={<div><Loader size=\"large\" active /></div>}>\n    <AuthWrapper>\n      <ThemeProvider theme={{ mode: 'light' }}>\n        <ErrorBoundary>\n          <Section header='Product Listing'>\n            <FilteredProductsWithContextProvider />\n          </Section>\n        </ErrorBoundary>\n      </ThemeProvider>\n    </AuthWrapper>\n  </Suspense>\n)\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}